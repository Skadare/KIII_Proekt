name: CI-CD pipeline

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push backend image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/nba-backend:latest ./backend
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/nba-backend:latest

      - name: Build and push frontend image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/nba-frontend:latest ./frontend
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/nba-frontend:latest

  deploy-to-aks:
    name: deploy-to-aks
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Configure kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG_DATA }}" | base64 --decode > $HOME/.kube/config

      - name: Ensure target namespace exists
        run: |
          kubectl get ns nba-voting || kubectl create namespace nba-voting

      - name: Deploy manifests
        run: |
          kubectl apply -n nba-voting -f kubernetes/

      - name: Verify rollout
        run: |
          kubectl rollout status deployment/nba-backend -n nba-voting --timeout=90s
          kubectl rollout status deployment/nba-frontend -n nba-voting --timeout=90s
